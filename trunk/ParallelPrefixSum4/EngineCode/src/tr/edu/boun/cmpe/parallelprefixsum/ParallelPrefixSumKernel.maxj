package tr.edu.boun.cmpe.parallelprefixsum;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;

public class ParallelPrefixSumKernel extends Kernel {
	final int SIZE_VECTOR = 4;
	final DFEType TYPE_ELEMENT = dfeUInt(32);
	final DFEVectorType<DFEVar> TYPE_VECTOR = new DFEVectorType<DFEVar>(TYPE_ELEMENT, SIZE_VECTOR);

	protected ParallelPrefixSumKernel(KernelParameters parameters) {
		super(parameters);

		DFEVector<DFEVar> x = io.input("x", TYPE_VECTOR);

		io.output("y", x.mul(2), TYPE_VECTOR);
	}

}
