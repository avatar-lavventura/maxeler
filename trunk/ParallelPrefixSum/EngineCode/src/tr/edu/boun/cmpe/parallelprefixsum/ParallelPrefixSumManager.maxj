package tr.edu.boun.cmpe.parallelprefixsum;


import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

public class ParallelPrefixSumManager {
	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		Manager manager = new Manager(params);
		Kernel kernel = new ParallelPrefixSumKernel(
				manager.makeKernelParameters());

		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.createSLiCinterface(defaultInterface());
		manager.build();
	}

	static EngineInterface defaultInterface() {
		EngineInterface ei = new EngineInterface();
		InterfaceParam size = ei.addParam("size", CPUTypes.UINT32);
		ei.setTicks("ParallelPrefixSumKernel", size / ParallelPrefixSumKernel.SIZE_VECTOR);
		ei.setStream("x", CPUTypes.UINT32, size * CPUTypes.UINT32.sizeInBytes());
		ei.setStream("y", CPUTypes.UINT32, size * CPUTypes.UINT32.sizeInBytes());

		return ei;
	}
}
